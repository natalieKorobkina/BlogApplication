@model PostDetailsViewModel

@{
    ViewBag.Title = "PostDetails";
}

<!--Show post-->
<div class="container text-justify">
    <div class="row">
        <div class="col-lg-8 col-md-10 mx-auto">
            <div class="post-preview">
                <h2 class="post-title">
                    @Model.Title
                </h2>
                <h4 class="post-subtitle">
                    @Model.SubTitle
                </h4>
                @if (Model.DateCreated != Model.DateUpdated)
                {
                    <p class="post-meta">
                        Updated by @Model.UserName.Split('@')[0]
                        on @Model.DateUpdated.ToString("MMMM dd, yyyy HH:mm")
                    </p>
                }
                else
                {
                    <p class="post-meta">
                        Posted by @Model.UserName.Split('@')[0]
                        on @Model.DateCreated.ToString("MMMM dd, yyyy HH:mm")
                    </p>
                }
                <p>
                    @Html.Raw(Model.Body)
                </p>
                @if (@Model.MediaUrl != null)
                {
                    <img class="img-thumbnail" src="@Url.Content(Model.MediaUrl)" />
                }
            </div>
            <hr>
            <!-- comments-->
            @if (Model.Comments.Count() != 0)
            {
                <div class="comments">
                    <h5><i>Comments: @Model.Comments.Count()</i></h5>
                </div>

                foreach (var comment in Model.Comments)
                {

                    <div class="row">
                        <div class="col-sm-9 col-md-10 list-group-item list-group-item-secondary">
                            @if (@comment.DateCreated != @comment.DateUpdated)
                            {
                                <div class="text-black-50 ">
                                    <i class="fas fa-user"></i>Edited by @comment.User.UserName.Split('@')[0]
                                    <i class="fas fa-clock"></i> @comment.DateCreated.ToString("MMMM dd, yyyy HH:mm")
                                </div>
                                if (@comment.UpdatedReason != null && (User.IsInRole("Admin") | User.IsInRole("Moderator")))
                                {
                                    <div class="text-danger">Reason of editing: @comment.UpdatedReason</div>
                                }
                            }
                            else
                            {
                                <div class="text-black-50 ">
                                    <i class="fas fa-user"></i>Posted by @comment.User.UserName.Split('@')[0]
                                    <i class="fas fa-clock"></i> @comment.DateCreated.ToString("MMMM dd, yyyy HH:mm")
                                </div>
                            }
                            <div>@comment.Body</div>
                            @if (User.IsInRole("Admin") | User.IsInRole("Moderator"))
                            {
                            <div>
                                <a class="btn btn-light" href="@Url.Action("UpdateComment", "Blog", new { id = comment.Id, postId = Model.Id })">
                                    Edit comment <i class="fas fa-edit"></i>
                                </a>
                                <a class="btn btn-light" href="@Url.Action("DeleteComment", "Blog", new { id = comment.Id, postId = Model.Id })">
                                    Delete comment <i class="fas fa-minus-circle"></i>
                                </a>
                            </div>
                            }
                        </div>
                    </div>
                    <br />
                }
            }
        </div>
    </div>
</div>
<!-- comments form-->
<div class="comment-form">
    <form method="post">
        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
        <div class="row">
            <div class="col-sm-12">
                <div class="form-group">
                    @Html.LabelFor(input => input.CommentBody, "Leave your comment: ")
                    @Html.TextAreaFor(input => input.CommentBody, new { @class = "form-control", placeholder = "Comment", rows = 2, columns = 2 })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="form-group">
                <button type="submit" class="btn btn-light"><i class="fas fa-comment-alt"></i>Post comment</button>
            </div>
        </div>
    </form>
    <br />
    <div><a href="@Url.Action("Index", "Blog")" class="btn btn-dark">Back to List</a></div>
</div>